<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns="http://xmlns.jcp.org/xml/ns/javaee"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://xmlns.jcp.org/xml/ns/javaee http://xmlns.jcp.org/xml/ns/javaee/web-app_4_0.xsd"
         version="4.0">
  <welcome-file-list>

    <welcome-file>toLogin.action</welcome-file>

  </welcome-file-list>

  <filter>
    <filter-name>shiroFilter</filter-name>
    <filter-class>org.springframework.web.filter.DelegatingFilterProxy</filter-class>
  </filter>
  <filter-mapping>
    <filter-name>shiroFilter</filter-name>
    <url-pattern>/*</url-pattern>
  </filter-mapping>
  <!--加载spring容器-->
  <context-param>
    <param-name>contextConfigLocation</param-name>
    <param-value>classpath:applicationContext.xml</param-value>
  </context-param>
  <listener>
    <listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
  </listener>

  <display-name>spring_mvc</display-name>

  <!-- 配置前端控制器; 其实就和servlet差不多 -->
  <servlet>
    <servlet-name>springmvcDemo</servlet-name>
    <servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
    <!-- 配置加载SpringMVC的主配置文件: 这个和spring类似 -->
    <!-- 如果这个没有配置,默认是: /WEB-INF/${servlet-name}-servlet.xml -->
    <init-param>
      <param-name>contextConfigLocation</param-name>
      <param-value>classpath:SpringMvc.xml</param-value>
    </init-param>
  </servlet>

  <servlet-mapping>
    <servlet-name>springmvcDemo</servlet-name>
    <!--
        1: /* 拦截所有的文件(jsp,js,png,css)  全拦截,不建议使用
        2:  *.action    *.do   拦截以action 或  do 结尾的请求;
                这个扩展名可以自定义   (肯定能使用)一般用在后台系统
        3: /  拦截所有(不包括jsp),其它都拦截:如 js, css, png  (建议使用)一般用在前台->面向消费者
     -->
    <url-pattern>*.action</url-pattern>
  </servlet-mapping>

  <servlet-mapping>
    <servlet-name>default</servlet-name>
    <!--
        1: /* 拦截所有的文件(jsp,js,png,css)  全拦截,不建议使用
        2:  *.action    *.do   拦截以action 或  do 结尾的请求;
                这个扩展名可以自定义   (肯定能使用)一般用在后台系统
        3: /  拦截所有(不包括jsp),其它都拦截:如 js, css, png  (建议使用)一般用在前台->面向消费者
     -->
    <url-pattern>*.jpg</url-pattern>
    <url-pattern>*.png</url-pattern>
    <url-pattern>*.js</url-pattern>
    <url-pattern>*.ttf</url-pattern>
    <url-pattern>*.woff</url-pattern>
    <url-pattern>*.woff2</url-pattern>
    <url-pattern>*.css</url-pattern>
    <url-pattern>*.gif</url-pattern>
    <url-pattern>*.eot</url-pattern>
  </servlet-mapping>

  <error-page>
    <error-code>404</error-code>
    <location>/Error.jsp</location>
  </error-page>
  <error-page>
    <error-code>500</error-code>
    <location>/Error.jsp</location>
  </error-page>

</web-app>